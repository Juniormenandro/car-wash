generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type PostsComments {
  id       String @map("_id") @db.ObjectId
  postedBy String @db.ObjectId
  text     String
}

type UsersServices {
  id          String @map("_id") @db.ObjectId
  description String
  name        String
}

model ClientesServicos {
  id                          String    @id @default(auto()) @map("_id") @db.ObjectId
  aguardandoPagamento         Boolean
  carro                       String
  clienteId                   String    @db.ObjectId
  concluido                   Boolean
  createdAt                   DateTime? @db.Date
  data                        DateTime  @db.Date
  dataConclusao               DateTime? @db.Date
  rawPrice                    String?
  selectedColor               String
  selectedModel               String
  selectedPayment             String
  selectedProductDefaultPrice String?
  selectedProductId           String?
  selectedProductNane         String
  selectedProdutPrice         String
  selectedTime                String
  updatedAt                   DateTime? @db.Date
}

model clientes {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  v         BigInt?   @map("__v")
  createdAt DateTime  @db.Date
  email     String?
  nome      String
  telefone  String    @unique(map: "telefone_1")
  updatedAt DateTime? @db.Date
}

model despesas {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model faturamentodiarios {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model posts {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  v         Int             @map("__v")
  body      String
  comments  PostsComments[]
  createdAt DateTime        @db.Date
  likes     String[]
  photo     String
  postedBy  String          @db.ObjectId
  title     String
  updatedAt DateTime        @db.Date
}

model registrohoras {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model servicos {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  v                   Int      @map("__v")
  aguardandoPagamento Boolean
  cliente             String   @db.ObjectId
  concluido           Boolean
  data                DateTime @db.Date
  preco               Int
}

model tokens {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  invalid   Boolean
}

model users {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  v         Int             @map("__v")
  email     String          @unique(map: "email_1")
  followers String[]
  following String[]
  name      String
  password  String?
  pic       String?
  services  UsersServices[]
}
